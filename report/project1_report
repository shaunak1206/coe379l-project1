# COE 379L – Project 1 Report

Name: Shaunak Kapur
Course: COE 379L – Software Design for Responsible Intelligent Systems

------------------------------------------------------------

## 1) Data Preparation

To begin the project, I examined the dataset, which contained 131,165 rows and 12 columns
representing information about shelter animals and their outcomes. I started by cleaning the
data to ensure it was consistent and ready for modeling.

I first removed 17 duplicate rows and standardized column names for easier reference. Then,
I addressed missing values. For categorical variables (such as Sex upon Outcome and Animal Type),
I filled missing entries using the mode — the most frequent value — since this approach preserves
the distribution of each feature. Rows missing the target variable (Outcome Type) were removed, as
they could not contribute to model training.

The column Age upon Outcome, originally stored as a string (e.g., “2 years,” “3 weeks”), was
converted into a numeric variable in days, allowing for direct comparison across animals of different
ages. I also dropped several columns that were either irrelevant, redundant, or had too many unique
values (high cardinality), such as Animal ID, Date of Birth, DateTime, MonthYear, Breed, Color, and
Name. These fields were unlikely to improve predictive performance and would increase memory usage
or risk overfitting.

After these preprocessing steps, the resulting dataset was smaller, more balanced, and computationally
manageable, which helped prevent program crashes during training.

------------------------------------------------------------

## 2) Insights from Exploratory Data Analysis (EDA)

Before modeling, I conducted an Exploratory Data Analysis (EDA) to understand key trends.
Approximately 64% of animals were adopted, while 36% were transferred, showing that adoption was
the dominant outcome. The majority of animals were dogs and cats, with smaller groups consisting
of birds, rabbits, and other species.

A notable trend emerged regarding age: younger animals had a significantly higher likelihood
of adoption. Visualizing the age distribution confirmed that the probability of adoption decreased
as the animal’s age increased.

The Sex upon Outcome feature also provided meaningful insight. Animals that were spayed or neutered
had substantially higher adoption rates compared to those that were intact. This may reflect adopter
preferences for sterilized pets or shelter policies that promote adoption of animals ready for home
environments.

Overall, these findings suggested that age, species, and sterilization status were among the most
influential predictors for adoption likelihood.

------------------------------------------------------------

## 3) Modeling Procedure

The primary goal was to build a model that could predict the animal’s outcome type — specifically
whether an animal would be adopted or transferred.

I split the dataset into 80% training and 20% testing sets, using stratified sampling to preserve
the ratio of adoption to transfer outcomes in both subsets. For preprocessing, I used a scikit-learn
pipeline that handled numeric scaling, imputation for missing values, and one-hot encoding of
categorical features.

Three different models were trained and compared:
  1. K-Nearest Neighbors (KNN) baseline with k = 5
  2. KNN with GridSearchCV (k = [3, 5, 7]) using 2-fold cross-validation on a 2,000-row subsample
  3. Perceptron, a linear classifier that provides a simple linear decision boundary

This modeling process allowed for both a simple baseline and a more interpretable linear model
for comparison.

------------------------------------------------------------

## 4) Model Performance and Metrics

The models were evaluated on the held-out test set using accuracy, recall, precision, and macro F1-score.
Results:

  - KNN (k = 5): Accuracy = 0.864, Adoption Recall = 0.931, Transfer Recall = 0.748, Macro F1 = 0.849
  - KNN (GridSearchCV, k = 7): Accuracy = 0.835, Adoption Recall = 0.905, Transfer Recall = 0.711, Macro F1 = 0.816
  - Perceptron: [Results will be updated after running the model]

The Perceptron model provides a linear decision boundary that can effectively separate adoption and transfer
cases. As a linear classifier, it offers good interpretability and computational efficiency. The perceptron
is particularly suitable for this binary classification task as it can learn a simple linear separation
between the two outcome types.

------------------------------------------------------------

## 5) Confidence and Limitations

I am confident that the Perceptron model provides an effective linear solution for this dataset.
As a linear classifier, it offers good interpretability and computational efficiency while providing
a simple decision boundary that can effectively separate adoption and transfer cases.

However, there were a few limitations. To prevent memory crashes, I excluded high-cardinality columns
like Breed, Color, and Name. While this improved computational efficiency, it may have removed valuable
predictive information—particularly breed, which could influence adoption outcomes. Additionally, due
to limited processing power, GridSearchCV was only run on a smaller subsample, potentially under-optimizing
the KNN model.

Finally, since the dataset reflects a specific animal shelter, the learned patterns may not generalize
to shelters with different populations or adoption practices. Future work could address these issues by
incorporating more compute resources, using dimensionality reduction to handle high-cardinality features,
and validating the model on data from multiple shelters.

------------------------------------------------------------

